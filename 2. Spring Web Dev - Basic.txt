스프링 웹 개발 기초

- 정적 컨텐츠:		파일 그자체를 전달
- MVC와 템플릿 엔진:	파일에 동적인걸 추가해서 전달
- API:			JSON 이라는 데이터 구조 포맷으로 클라이언트에게 전달하는 방식


1. 정적 컨텐츠
	resources - static - name.html
	* localhost:8080/name.html -	이 주소로 들어가면 접속 가능
* 리소스 스태틱 파일에 정적 컨텐츠를 넣으면 접속 가능
* 웹 브라우저 (localhost:8080/name.html) -> 내장 톰켓 서버 -> 스프링 컨테이너 (name 관련 컨트롤러 X) 없으면 -> 리소스 스태틱 파일에서 찾음


2. MVC와 템플릿 엔진
	* MVC:	Mode, View, Controller
	* View 는 보이는것에 집중 / Model, Controller 는 내부에 로직관련에 집중

* 타임리프 장점: HTML을 그대로 쓰고 그 파일을 서버 없이 바로 열어봐도 껍데기를 볼 수 있다.
* 웹 브라우저 (localhost:8080/name.html) -> 내장 톰켓 서버 -> 스프링 컨테이너 helloController 
	   (return:hello-template, model(name:spring)) -> viewResolver (Thymeleaf 템플릿 엔진 처리) -> html(변환 후)


3. API

* 문자
	* MVC, 템플릿 엔진과 다르게 컨트롤러에서 가지는 값을 직접 html 안에 <body> 안에 넣겠다는 뜻
	* 직접 홈페이지를 열어서 소스를 보면, html 구조는 없고 컨트롤러 내에 있는 데이터 그 자체 값만 나옴

* 데이터
	* 문자와 다르게 문자 대신에 hello 라는 객체를 넣어서 만듦
		(hello 클래스 안에 private String name 과 Getter, Setter을 넣고 만듦)
	* 직접 홈페이지를 열어서 소스를 보면, JSON 구조 (key, string) 구조로 나옴
	* xml 방식은 <html></html> 방식이 너무 무겁기 때문에 JSON 방식 선호